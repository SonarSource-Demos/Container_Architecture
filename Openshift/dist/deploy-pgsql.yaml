apiVersion: v1
kind: ConfigMap
metadata:
  name: pgsql-initdb-config
  namespace: database01
data:
  initdb.sh: |
    #!/bin/bash
      set -e
      psql -v ON_ERROR_STOP=1 --username 'postgres' --dbname 'postgres' <<-EOSQL
      CREATE ROLE sonarqube WITH LOGIN PASSWORD 'Bench123';
      CREATE DATABASE sonarqube15 WITH ENCODING 'UTF8' OWNER sonarqube TEMPLATE=template0;
      GRANT ALL PRIVILEGES ON DATABASE sonarqube15 TO sonarqube;
      EOSQL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: database01
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: postgres
          image: postgres:15.7
          args:
            - "-c"
            - "data_directory=/mnt/postgresql/pgdata/data"
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /mnt/postgresql/pgdata/data
          volumeMounts:
            - name: pgdata
              mountPath: /mnt/postgresql/pgdata
            - mountPath: /docker-entrypoint-initdb.d
              name: initscript   
          securityContext:
            fsGroup: 1000660000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: db01data
        - name: initscript
          configMap:
            name: pgsql-initdb-config  
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: postgresql
  labels:
      app: postgres
spec:
  type: NodePort
  ports:
    - name: postgres-deployment
      protocol: TCP
      port: 5432 
      targetPort: 5432
  selector:
    app: postgres